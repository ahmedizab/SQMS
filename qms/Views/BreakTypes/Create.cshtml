@model qms.Models.tblBreakType
@{
    ViewBag.Title = "Break Type Create";
}

<div class="container">
    <div class="row">

        <h4 class="page-head-line">Break Type > Create </h4>

        <div class="col-md-5">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.break_type_short_name, htmlAttributes: new { @class = "control-label col-md-4" })*@
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.break_type_short_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Short Name" } })
                            @Html.ValidationMessageFor(model => model.break_type_short_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.break_type_name, htmlAttributes: new { @class = "control-label col-md-4" })*@
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.break_type_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Full Name" } })
                            @Html.ValidationMessageFor(model => model.break_type_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.start_time, htmlAttributes: new { @class = "control-label col-md-4" })*@
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.start_time, new { htmlAttributes = new { @class = "form-control", type = "time" } })
                            @Html.ValidationMessageFor(model => model.start_time, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.end_time, htmlAttributes: new { @class = "control-label col-md-4" })*@
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.end_time, new { htmlAttributes = new { @class = "form-control", type = "time" } })
                            @Html.ValidationMessageFor(model => model.end_time, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(model => model.duration, htmlAttributes: new { @class = "control-label col-md-4" })*@
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.duration, new { htmlAttributes = new { @class = "form-control", @placeholder = "Duration (Minuites)" } })
                            @Html.ValidationMessageFor(model => model.duration, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            <input type="submit" value="Create" class="btn btn-color" />
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
    <div class="row">
        <div>
            <button class="btn btn-color">
                @Html.ActionLink("Back to List", "Index")
            </button>
        </div>
    </div>
</div>