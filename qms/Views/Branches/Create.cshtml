@model qms.Models.tblBranch

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@{
    ViewBag.Title = "Branch Create";
}
<div class="container">
    <div class="row">
        <h4 class="page-head-line">Branch > Create</h4>
        <div class="col-md-1"></div>
            <div class="col-md-5">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.branch_name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*@Html.Label("Branch Name", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.branch_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Branch Name" } })
                                @Html.ValidationMessageFor(model => model.branch_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*@Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.contact_person, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*@Html.Label("Contact Person", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.contact_person, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Person" } })
                                @Html.ValidationMessageFor(model => model.contact_person, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.contact_no, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*@Html.Label("Contact No", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.contact_no, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact No" } })
                                @Html.ValidationMessageFor(model => model.contact_no, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.display_next, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*@Html.Label("Display Number", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.display_next, new { htmlAttributes = new { @class = "form-control", @placeholder = "Display Number" } })
                                @Html.ValidationMessageFor(model => model.display_next, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.contact_no, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @*@Html.Label("Static IP", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.static_ip, new { htmlAttributes = new { @class = "form-control", @placeholder = "Static IP" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-8">
                                <input type="submit" value="Create" class="btn btn-color" />
                                <button class="btn btn-color">
                                    @Html.ActionLink("Back to List", "Index")
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>


        </div>
</div>