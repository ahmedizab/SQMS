//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace qms.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class qmsEntities : DbContext
    {
        public qmsEntities()
            : base("name=qmsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<tblBranch> tblBranches { get; set; }
        public virtual DbSet<tblBranchUser> tblBranchUsers { get; set; }
        public virtual DbSet<tblCounter> tblCounters { get; set; }
        public virtual DbSet<tblCustomer> tblCustomers { get; set; }
        public virtual DbSet<tblServiceDetail> tblServiceDetails { get; set; }
        public virtual DbSet<tblServiceStatu> tblServiceStatus { get; set; }
        public virtual DbSet<tblServiceType> tblServiceTypes { get; set; }
        public virtual DbSet<tblTokenQueue> tblTokenQueues { get; set; }
        public virtual DbSet<tblBreakType> tblBreakTypes { get; set; }
        public virtual DbSet<tblServiceSubType> tblServiceSubTypes { get; set; }
        public virtual DbSet<tblDailyBreak> tblDailyBreaks { get; set; }
        public virtual DbSet<tblCustomerType> tblCustomerTypes { get; set; }
        public virtual DbSet<tblSmsLog> tblSmsLogs { get; set; }
    
        public virtual ObjectResult<Nullable<int>> psp_getNewToken(Nullable<int> branch_id)
        {
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("psp_getNewToken", branch_idParameter);
        }
    
        public virtual ObjectResult<GetInProgressTokenList_Result> GetInProgressTokenList(Nullable<int> branch_id)
        {
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInProgressTokenList_Result>("GetInProgressTokenList", branch_idParameter);
        }
    }
}
